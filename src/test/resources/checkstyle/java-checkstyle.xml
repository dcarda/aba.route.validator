<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
  <property name="severity" value="error"/>
  <property name="charset" value="UTF-8" />
  <property name="cacheFile" value="${basedir}/checkstyle-cachefile"/>

  <module name="Translation">
    <property name="severity" value="error"/>
  </module>

  <module name="SuppressionFilter">
    <property name="file" value="${basedir}/src/test/resources/checkstyle/java-suppressions.xml"/>
    <property name="optional" value="true"/>
  </module>

  <module name="SuppressWithPlainTextCommentFilter">
    <property name="offCommentFormat" value="CHECKSTYLE\.OFF\: ([\w\|\.\*]+)"/>
    <property name="onCommentFormat" value="CHECKSTYLE\.ON\: ([\w\|\.\*]+)"/>
    <property name="checkFormat" value="$1"/>
  </module>

  <module name="FileLength">
    <property name="fileExtensions" value="java" default="java"/>
    <property name="max" value="3000"/>
  </module>

  <module name="LineLength">
    <property name="ignorePattern" value="^ *\* *[^ ]+$"/>
    <property name="max" value="201"/>
  </module>

  <module name="TreeWalker">
    <property name="tabWidth" value="2"/>

    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="CHECKSTYLE\.OFF\: ([\w\|\.\*]+)"/>
      <property name="onCommentFormat" value="CHECKSTYLE\.ON\: ([\w\|\.\*]+)"/>
      <property name="idFormat" value="$1"/>
    </module>

    <module name="AvoidStarImport"/>
    <module name="ConstantName"/>
    <module name="CyclomaticComplexity">
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="DeclarationOrder"/>
    <module name="EmptyBlock"/>
    <module name="EmptyForIteratorPad"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization"/>
    <!-- <module name="FileContentsHolder"/> -->
    <module name="FinalClass"/>
    <module name="IllegalImport">
      <property name="id" value="CommonsCollectionsOld"/>
      <property name="illegalPkgs" value="org.apache.commons.collections"/>
      <message key="import.illegal" value="Use commons.collections4 not older version - {0}."/>
    </module>
    <module name="IllegalImport">
      <property name="id" value="CommonsLangOld"/>
      <property name="illegalPkgs" value="org.apache.commons.lang"/>
      <message key="import.illegal" value="Use commons.lang3 not older version - {0}."/>
    </module>
    <module name="IllegalImport">
      <property name="id" value="JodaTimeOld"/>
      <property name="illegalPkgs" value="org.joda.time"/>
      <message key="import.illegal" value="Use Java 8 java.time classes - {0}."/>
    </module>
    <module name="IllegalImport">
      <property name="id" value="OpenCSV"/>
      <property name="illegalPkgs" value="com.opencsv"/>
      <message key="import.illegal" value="Use static Serializer class methods to read and write CSV files, not OpenCSV - {0}."/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="IllegalThrows">
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <!-- <module name="InnerAssignment"/> -->
    <!--<module name="JavadocMethod">
      <property name="suppressLoadErrors" value="true"/>
      <message key="javadoc.missing" value="Missing a Javadoc method comment - use JAutodoc or supply manually."/>
    </module>
    <module name="JavadocStyle">
      <property name="checkFirstSentence" value="false"/>
      <message key="javadoc.missing" value="Missing a Javadoc comment - use JAutodoc or supply manually."/>
    </module>
    <module name="JavadocType">
      <message key="javadoc.missing" value="Missing a Javadoc type comment - use JAutodoc or supply manually."/>
    </module>
    <module name="JavadocVariable">
      <message key="javadoc.missing" value="Missing a Javadoc variable comment - use JAutodoc or supply manually."/>
    </module>-->
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName">
      <property name="id" value="LocalVariableNameCase"/>
      <property name="format" value="^((?![A-Z]{2}).)*$"/>
      <message key="name.invalidPattern" value="Variable name ''{0}'' must not contain consecutive  upper-case letters."/>
    </module>
    <module name="LocalVariableName"/>
    <module name="MemberName">
      <property name="format" value="^[a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodLength"/>
    <module name="MethodName">
      <property name="id" value="MethodNameCase"/>
      <property name="format" value="^((?![A-Z]{2}).)*$"/>
      <message key="name.invalidPattern" value="Method name ''{0}'' must not contain consecutive  upper-case letters."/>
      <message key="method.name.equals.class.name" value="Method name ''{0}'' must not contain consecutive  upper-case letters."/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="ModifierOrder"/>
    <module name="NeedBraces"/>
    <module name="NestedIfDepth">
      <property name="max" value="4"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NPathComplexity">
      <property name="severity" value="warning"/>
      <property name="max" value="500"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z_][a-z0-9_]*)*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^[a-zA-Z0-9]*$"/>
    </module>
    <module name="ParameterName">
      <property name="id" value="ParameterNameCase"/>
      <property name="format" value="^((?![A-Z]{2}).)*$"/>
      <message key="name.invalidPattern" value="Parameter name ''{0}'' must not contain consecutive upper-case letters."/>
    </module>
    <module name="ParameterNumber">
      <property name="id" value="paramNum"/>
      <property name="max" value="11"/>
    </module>
    <module name="RedundantImport"/>
    <module name="RedundantModifier"/>
    <module name="Regexp">
      <property name="id" value="SystemOutLogging"/>
      <property name="format" value="System[.](out|in|err)[.]"/>
      <property name="message" value="System.out not allowed in main code (use log4j instead)"/>
      <property name="illegalPattern" value="true"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="Regexp">
      <property name="id" value="ThreadSleep"/>
      <property name="format" value="Thread[.]sleep\([^)]+\)"/>
      <property name="message" value="Sleeping is not something you should do in an app server thread"/>
      <property name="illegalPattern" value="true"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="log4jDebug"/>
      <property name="format" value="\.debug\("/>
      <property name="message" value="Possible direct use of log4j debug detected. Use Logs.debug instead."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="log4jInfo"/>
      <property name="format" value="\.info\("/>
      <property name="message" value="Possible direct use of log4j info detected. Use Logs.info instead."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="log4jWarn"/>
      <property name="format" value="\.warn\("/>
      <property name="message" value="Possible direct use of log4j warn detected. Use Logs.warn instead."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="log4jError"/>
      <property name="format" value="\.error\("/>
      <property name="message" value="Possible direct use of log4j error detected. Use Logs.error instead."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="logsStringConcat"/>
      <property name="format" value="log(Debug|Info|Warn|Error)\([^+]+\+"/>
      <property name="message" value="String concatenation not allowed. See Logs documentation for proper usage."/>
      <property name="ignoreCase" value="true"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="SpaceIndentation"/>
      <property name="format" value="^ *\t"/>
      <property name="message" value="Use spaces for indentation - not tabs" />
      <property name="ignoreComments" value="true"/>
    </module>
    <!--<module name="RegexpSinglelineJava">
      <property name="id" value="TabIndentation"/>
      <property name="format" value="^\t* "/>
      <property name="message" value="Use tabs for indentation - not spaces" />
      <property name="ignoreComments" value="true"/>
    </module>-->
    <module name="RegexpSinglelineJava">
      <property name="id" value="SingleQuotesForSingleChar"/>
      <property name="severity" value="error"/>
      <property name="format" value="[+][ ][&quot;][^'\\][&quot;]"/>
      <property name="message" value="Use single quotes for concatenating a single character"/>
    </module>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StaticVariableName">
      <property name="format" value="^[a-zA-Z0-9]*$"/>
    </module>
    <module name="StringLiteralEquality"/>
    <module name="TypeName">
      <property name="id" value="TypeNameCase"/>
      <property name="format" value="^((?![A-Z]{2}).)*$"/>
      <message key="name.invalidPattern" value="Name ''{0}'' must not contain consecutive  upper-case letters."/>
    </module>
    <module name="UnusedImports"/>
    <module name="UpperEll"/>
    <module name="VisibilityModifier"/>
  </module>
</module>
